version: '3.8'

services:
  mongodb:
    image: mongo:6
    container_name: epu-mongodb-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: epu-gestao
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data_prod:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - epu-network-prod

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: epu-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:${MONGO_ROOT_PASSWORD:-admin123}@mongodb:27017/epu-gestao?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      JWT_EXPIRE: 24h
      CORS_ORIGIN: ${FRONTEND_URL:-http://localhost:3000}
    ports:
      - '5000:5000'
    depends_on:
      - mongodb
    volumes:
      - backend_uploads_prod:/app/uploads
    networks:
      - epu-network-prod
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5000/health']
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
      args:
        VITE_API_BASE_URL: ${API_BASE_URL:-http://localhost:5000/api}
    container_name: epu-frontend-prod
    restart: unless-stopped
    ports:
      - '3000:80'
    depends_on:
      - backend
    networks:
      - epu-network-prod
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:80']
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data_prod:
    driver: local
  backend_uploads_prod:
    driver: local

networks:
  epu-network-prod:
    driver: bridge
