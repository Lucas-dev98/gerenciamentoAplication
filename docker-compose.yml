services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: epu-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: epugestao123
      MONGO_INITDB_DATABASE: epu_gestao
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - epu-network
    healthcheck:
      test: ['CMD', 'mongosh', '--quiet', '--eval', "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: epu-gestao-backend
    container_name: epu-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_URI: mongodb://admin:epugestao123@mongodb:27017/epu_gestao?authSource=admin
      JWT_SECRET: epu-gestao-jwt-secret-key-super-secure-2025
      CORS_ORIGIN: http://localhost:3000
    ports:
      - '5000:3001'
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - epu-network
    healthcheck:
      test: ['CMD', 'node', 'healthcheck.js']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: epu-gestao-frontend
    container_name: epu-frontend
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: /api
      VITE_APP_ENV: production
      VITE_APP_TITLE: EPU - Gestão
      VITE_APP_VERSION: 1.0.0
    ports:
      - '3000:80'
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - epu-network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--quiet',
          '--tries=1',
          '--spider',
          'http://localhost:80/',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mongodb_data:
    driver: local

networks:
  epu-network:
    driver: bridge
