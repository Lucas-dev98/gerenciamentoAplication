#!/bin/bash

echo "üöÄ Iniciando sistema EPU-Gest√£o..."

# Verificar se o Docker est√° rodando
echo "üîç Verificando Docker..."
if ! docker info >/dev/null 2>&1; then
    echo "‚ùå Docker n√£o est√° rodando. Por favor, inicie o Docker Desktop primeiro."
    echo "üí° Aguarde o Docker inicializar completamente antes de continuar."
    exit 1
fi

echo "‚úÖ Docker est√° rodando"

# Parar containers existentes se estiverem rodando
echo "üõë Parando containers existentes..."
docker-compose down --remove-orphans

# Construir e iniciar containers
echo "üèóÔ∏è Construindo e iniciando containers..."
docker-compose up -d --build

# Aguardar containers iniciarem
echo "‚è≥ Aguardando containers iniciarem..."
sleep 10

# Verificar status dos containers
echo "üìã Status dos containers:"
docker-compose ps

# Verificar sa√∫de dos containers
echo "üè• Verificando sa√∫de dos containers..."
sleep 5

# Tentar algumas vezes verificar se o backend est√° respondendo
echo "üîç Testando conectividade do backend..."
for i in {1..5}; do
    if curl -s http://localhost:5000/api/health >/dev/null 2>&1; then
        echo "‚úÖ Backend est√° respondendo"
        break
    else
        echo "‚è≥ Tentativa $i/5 - Backend ainda n√£o est√° pronto..."
        sleep 3
    fi
done

# Verificar se o frontend est√° acess√≠vel
echo "üîç Testando conectividade do frontend..."
if curl -s http://localhost:3000 >/dev/null 2>&1; then
    echo "‚úÖ Frontend est√° acess√≠vel"
else
    echo "‚ö†Ô∏è Frontend pode n√£o estar pronto ainda"
fi

echo "üéâ Sistema iniciado! Acesse:"
echo "   Frontend: http://localhost:3000"
echo "   Backend: http://localhost:5000"
echo "   MongoDB: localhost:27017"
