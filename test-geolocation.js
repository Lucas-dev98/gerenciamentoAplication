// Teste de Geolocaliza√ß√£o - Clima por Coordenadas
// Execute este c√≥digo no console do navegador em http://localhost:3000

// Fun√ß√£o para testar a API de clima com coordenadas espec√≠ficas
async function testWeatherByCoords(lat, lon, locationName) {
  console.log(`\n=== Testando clima para ${locationName} (${lat}, ${lon}) ===`);

  try {
    // Testar atrav√©s do proxy do frontend
    const response = await fetch(`/api/weather/weather?lat=${lat}&lon=${lon}`);

    if (!response.ok) {
      throw new Error(`HTTP ${response.status}: ${response.statusText}`);
    }

    const data = await response.json();

    console.log(`‚úÖ Sucesso para ${locationName}:`);
    console.log(`   üìç Localiza√ß√£o: ${data.name}, ${data.sys.country}`);
    console.log(`   üå°Ô∏è  Temperatura: ${data.main.temp}¬∞C`);
    console.log(`   üå§Ô∏è  Tempo: ${data.weather[0].description}`);
    console.log(`   üíß Umidade: ${data.main.humidity}%`);
    console.log(`   üí® Vento: ${data.wind.speed} m/s`);

    return data;
  } catch (error) {
    console.error(`‚ùå Erro para ${locationName}:`, error);
    return null;
  }
}

// Coordenadas de teste para diferentes cidades brasileiras
const testLocations = [
  { lat: -23.5505, lon: -46.6333, name: 'S√£o Paulo' },
  { lat: -22.9068, lon: -43.1729, name: 'Rio de Janeiro' },
  { lat: -19.9191, lon: -43.9386, name: 'Belo Horizonte' },
  { lat: -30.0346, lon: -51.2177, name: 'Porto Alegre' },
  { lat: -25.4244, lon: -49.2654, name: 'Curitiba' },
  { lat: -8.0476, lon: -34.877, name: 'Recife' },
];

// Fun√ß√£o principal para testar todas as localiza√ß√µes
async function testAllLocations() {
  console.log('üß™ Iniciando testes de geolocaliza√ß√£o...');
  console.log('üåç Testando API de clima para v√°rias cidades brasileiras');

  for (const location of testLocations) {
    await testWeatherByCoords(location.lat, location.lon, location.name);
    // Pequena pausa entre requests
    await new Promise((resolve) => setTimeout(resolve, 1000));
  }

  console.log('\n‚úÖ Testes de geolocaliza√ß√£o conclu√≠dos!');
  console.log(
    'üìã Resultados mostram que a API est√° funcionando com coordenadas'
  );
}

// Fun√ß√£o para simular a geolocaliza√ß√£o do usu√°rio
function simulateUserLocation(lat, lon, cityName = 'Sua localiza√ß√£o') {
  console.log(
    `\nüéØ Simulando localiza√ß√£o do usu√°rio: ${cityName} (${lat}, ${lon})`
  );

  // Simular o que acontece quando o usu√°rio clica no bot√£o de localiza√ß√£o
  testWeatherByCoords(lat, lon, cityName);
}

// Exportar fun√ß√µes para uso no console
window.testWeatherByCoords = testWeatherByCoords;
window.testAllLocations = testAllLocations;
window.simulateUserLocation = simulateUserLocation;

console.log('üîß Fun√ß√µes de teste carregadas!');
console.log('üìù Use no console:');
console.log('   testAllLocations() - Testa v√°rias cidades');
console.log(
  "   simulateUserLocation(-23.5505, -46.6333, 'S√£o Paulo') - Simula sua localiza√ß√£o"
);
console.log(
  "   testWeatherByCoords(lat, lon, 'Nome da Cidade') - Teste espec√≠fico"
);
